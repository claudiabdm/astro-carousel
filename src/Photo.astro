---
import type { ComponentProps } from "astro/types";
import { Image, Picture } from "astro:assets";
import Loading from "./Loading.astro";

// TODO: maybe implement custom picture component
type Props = ComponentProps<typeof Picture> & {
    src: string;
    alt: string;
    aspectRatio?: number;
    classWrapper?: string;
    isCarousel?: boolean;
};
const { classWrapper, isCarousel = false, ...pictureProps } = Astro.props;
const aspectRatio =
    Astro.props.aspectRatio ??
    Number(pictureProps.width) / Number(pictureProps.height);
const widthPlaceholder = Math.max(
    Math.floor(Number(pictureProps.width) / 100),
    5,
);
const heightPlaceholder = Math.max(
    Math.floor(Number(pictureProps.height) / 100),
    5 * aspectRatio,
);
---

<script>
    export class AstroPhotoWrapper extends HTMLElement {
        component: HTMLElement;

        constructor() {
            super();
            this._init();
        }

        _init() {
            this.updateVisibility();
        }

        updateVisibility() {
            const image = this.querySelector("picture img");
            const placeholder = this.querySelector(".placeholder");
            if (
                image instanceof HTMLImageElement &&
                placeholder instanceof HTMLImageElement
            ) {
                const isComplete = image.complete;
                const loading = this.querySelector(".loading");

                if (isComplete) {
                    loading?.classList.add("loading--hidden");
                    placeholder.classList.add("placeholder--hidden");
                } else {
                    loading?.classList.remove("loading--hidden");
                    image.onload = () => {
                        placeholder.classList.add("placeholder--hidden");
                        loading?.classList.add("loading--hidden");
                    };
                }
            }
        }
    }
    customElements.define("astro-photo-wrapper", AstroPhotoWrapper);
</script>

<astro-photo-wrapper
    data-is-carousel={isCarousel}
    data-photo={pictureProps}
    class:list={["wrapper", classWrapper]}
>
    <Image
        src={pictureProps.src}
        width={widthPlaceholder}
        height={heightPlaceholder}
        class="placeholder"
        alt=""
        loading="eager"
        quality={10}
    />
    <Picture
        {...pictureProps}
        pictureAttributes={{
            style: "height: 100%; min-height: 100%; max-width: 100%;",
        }}
    />
    <slot name="loading">
        <Loading />
    </slot>
</astro-photo-wrapper>
<style lang="scss">
    .wrapper {
        position: relative;
        display: block;
        min-width: 100%;
        max-width: 100%;
        max-height: 100%;
        overflow: hidden; // Safari fix

        @media screen and (min-width: 768px) {
            border-width: 20px;
        }

        .placeholder {
            position: absolute;
            inset: 0;
            opacity: 1;
            visibility: visible;
            transition: opacity 0.25s ease-in;

            &--hidden {
                opacity: 0;
            }
        }

        img {
            object-fit: cover;
            object-position: center;
            width: 100%;
            height: 100%;
        }
    }
</style>
